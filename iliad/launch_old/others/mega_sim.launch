<?xml version="1.0"?>
<launch>

	<!-- SUMMIT XL STEEL-->
	<!-- disables gazebo ros_control plugin -->
	<arg name="omni_drive" default="true"/>
	<arg if="$(arg omni_drive)" name="ros_planar_move_plugin" value="true"/>
	<arg unless="$(arg omni_drive)" name="ros_planar_move_plugin" default="true"/>
	<arg name="ros_planar_move_plugin_force_based" default="false"/>

	<!--launch_navigation and launch_navigation_nomap args are exclusive
	and they are (or not) launched for all robots-->
	<arg name="launch_rviz" default="true"/>
	<arg name="gazebo_world" default="$(find summit_xl_gazebo)/worlds/summit_xl_office.world"/>
	<arg name="launch_advanced_simulation" default="false"/> <!-- Just for internal use -->
	<arg name="use_gpu_for_simulation" default="$(optenv USE_GPU_FOR_SIMULATION false)"/>

	<!-- common arguments -->
	<arg name="default_xacro_package" default="$(optenv ROBOT_XACRO_PACKAGE summit_xl_description)"/>

	<!-- arguments robot a -->
	<arg name="launch_robot" default="true"/>
	<arg name="launch_move_base" default="true"/>
	<arg name="launch_amcl_and_mapserver" default="true"/>
	<arg name="xacro_robot" default="$(optenv ROBOT_XACRO summit_xls_std.urdf.xacro)"/>

    
     <!-- arg to config the launch file-->

    <!--launch_navigation and launch_navigation_nomap args are exclusive
    and they are (or not) launched for all robots-->
    <arg name="default_xacro" default="summit_xl_std.urdf.xacro"/>
	<arg name="gazebo_gui" default="true"/>
    <arg name="map_file" default="willow_garage/willow_garage.yaml"/>
    <!--<arg name="map_file" default="empty/empty.yaml"/>-->
    <arg name="debug" default="false"/>

	<!--params of the different robots-->
	<!-- GPS default position of Robotnik at Fuente del Jarro-->
	<!-- robot a -->
	<arg name="id_robot" default="robot"/>
    <arg name="prefix" default="$(arg id_robot)_"/>

	<arg name="x_init_pose" default="0" />
	<arg name="y_init_pose" default="0" />
	<arg name="z_init_pose" default="0" />
    <arg name="launch_robot_ekf_localization" default="false"/>
    <arg name="robot_ekf_localization_mode" default="odom"/>
	<arg name="xacro_robot_package" default="$(arg default_xacro_package)"/>
	<arg name="gps_latitude" default="39.5080331"/>
	<arg name="gps_longitude" default="-0.4619816"/>
	<!-- arm robot a -->
    <arg name="launch_arm" default="false"/>
	<arg name="arm_manufacturer" default="trossen"/>
	<arg name="arm_model" default="vx300s"/>
    <arg name="launch_moveit" default="false"/>
    <arg name="arm_prefix" default="$(arg prefix)$(arg arm_model)"/>


	<!--BEGIN ROBOT 1-->
	<!--<include if="$(arg launch_robot_a)" file="$(find summit_xl_gazebo)/launch/summit_xl_one_robot.launch">-->
    <arg name="pad_model" default="$(optenv ROBOT_PAD_MODEL ps4)"/>
    <arg name="xacro_robot_path" default="$(eval find(xacro_robot_package) + '/robots/' + xacro_robot)"/>
    <arg name="movebase_local_planner" default="teb"/>
    <!-- odom, complete (including gps)-->
    <!-- arm robot -->

    <group ns="$(arg id_robot)">

        <!-- Load the URDF into the ROS Parameter Server -->
        <param name="robot_description" command="$(find xacro)/xacro '$(arg xacro_robot_path)'
                prefix:=$(arg prefix)
                ros_planar_move_plugin:=$(arg ros_planar_move_plugin)
                ros_planar_move_plugin_force_based:=$(arg ros_planar_move_plugin_force_based)
                omni_wheels:=$(arg omni_drive)
                gpu:=$(arg use_gpu_for_simulation)
                gps_latitude:='$(arg gps_latitude)'
                gps_longitude:='$(arg gps_longitude)'
                --inorder"/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
            <remap from="/joint_states" to="joint_states" />
        </node>

        <!-- Spawner model into gazebo -->
        <node name="urdf_spawner_summit_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-x $(arg x_init_pose)
                -y $(arg y_init_pose)
                -z $(arg z_init_pose)
                -J $(arg arm_prefix)_joint_1 0.0
                -J $(arg arm_prefix)_joint_2 2.9
                -J $(arg arm_prefix)_joint_3 0.0
                -J $(arg arm_prefix)_joint_4 1.3
                -J $(arg arm_prefix)_joint_5 -2.07
                -J $(arg arm_prefix)_joint_6 1.4
                -J $(arg arm_prefix)_joint_7 0.0
                -J $(arg arm_prefix)_joint_finger_1 0.0
                -J $(arg arm_prefix)_joint_finger_2 0.0
                -J $(arg arm_prefix)_joint_finger_3 0.0
                -J $(arg arm_prefix)_joint_finger_tip_1 1.0
                -J $(arg arm_prefix)_joint_finger_tip_2 1.0
                -J $(arg arm_prefix)_joint_finger_tip_3 1.0
                -urdf
                -param robot_description
                -model $(arg id_robot)" />

        <!-- start summit_xl_control nodes -->
        <include file="$(find summit_xl_control)/launch/summit_xl_control.launch">
            <arg name="id_robot" value="$(arg id_robot)"/>
            <arg name="prefix" value="$(arg prefix)"/>
            <arg name="sim" value="true"/>

            <arg if="$(arg omni_drive)" name="kinematics" value="omni"/>
            <arg unless="$(arg omni_drive)" name="kinematics" value="skid"/>

            <arg name="ros_planar_move_plugin" value="$(arg ros_planar_move_plugin)"/>
            <arg name="sim_arm_control" value="$(arg launch_arm)"/>

            <arg name="arm_manufacturer" value="$(arg arm_manufacturer)"/>
            <arg name="arm_model" value="$(arg arm_model)"/>
            <arg name="arm_prefix" value="$(arg arm_prefix)"/>
            <arg name="odom_broadcast_tf" unless="$(arg launch_robot_ekf_localization)" value="true"/>
            <arg name="odom_broadcast_tf" if="$(arg launch_robot_ekf_localization)" value="false"/>

        </include>

        <!-- robot_localization nodes, publishes transformation world->odom->base_footprint -->
		<include if="$(arg launch_robot_ekf_localization)" file="$(find summit_xl_localization)/launch/robot_localization_$(arg robot_ekf_localization_mode).launch">
			<arg name="prefix" value="$(arg prefix)"/>
		</include>

     

        <!-- amcl and map server base-->
        <include if="$(arg launch_amcl_and_mapserver)" file="$(find summit_xl_localization)/launch/map_server.launch">
            <arg name="prefix" value="$(arg prefix)"/>
            <arg name="map_file" value="$(arg map_file)"/>
        </include>
        <include if="$(arg launch_amcl_and_mapserver)" file="$(find summit_xl_localization)/launch/amcl.launch">
            <arg name="prefix" value="$(arg prefix)"/>
            <arg if="$(arg omni_drive)" name="odom_model_type" value="omni"/>
            <arg unless="$(arg omni_drive)" name="odom_model_type" value="diff"/>
            <arg name="x_init_pose" value="$(arg x_init_pose)"/>
            <arg name="y_init_pose" value="$(arg y_init_pose)"/>
            <arg name="z_init_pose" value="$(arg z_init_pose)"/>
        </include>

        <!-- move base -->
        <include if="$(arg launch_move_base)" file="$(find summit_xl_navigation)/launch/move_base.launch">
            <arg name="prefix" value="$(arg prefix)"/>
            <arg name="local_planner" value="$(arg movebase_local_planner)"/>
            <arg if="$(arg omni_drive)" name="differential_robot" value="false"/>
            <arg unless="$(arg omni_drive)" name="differential_robot" value="true"/>
        </include>

        

        <!-- MoveGroup Moveit! -->
        <include if="$(arg launch_moveit)" file="$(find summit_xl_j2s7s300_moveit_config)/launch/summit_xl_j2s7s300_moveit_config.launch">
                <!--arg name="sim" value="true"/-->
        </include>

    </group>

    
    
	
    
    
    
    
    
    

    <!-- gazebo simulation and rviz visualization-->
    <include file="$(find summit_xl_gazebo)/launch/gazebo_rviz.launch">
        <arg name="launch_rviz" value="$(arg launch_rviz)"/>
        <arg name="world" value="$(arg gazebo_world)"/>
        <arg name="debug" value="$(arg debug)"/>
		<arg name="gazebo_gui" value="$(arg gazebo_gui)"/>
    </include>

    
    
    
    
    
    
    
    
    
    

</launch>
