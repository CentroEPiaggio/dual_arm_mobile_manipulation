<?xml version="1.0"?>
<robot name="iliad" xmlns:xacro="http://wiki.ros.org/xacro">
        
    <xacro:arg name="panda_base_x"     default="0"/>
    <xacro:arg name="panda_base_y"     default="0"/>
    <xacro:arg name="panda_base_z"     default="0"/>
    <xacro:arg name="panda_base_roll"  default="0"/>
    <xacro:arg name="panda_base_pitch" default="0"/>
    <xacro:arg name="panda_base_yaw"   default="0"/>
    <xacro:arg name="ur10e_base_x"     default="0"/>
    <xacro:arg name="ur10e_base_y"     default="0"/>
    <xacro:arg name="ur10e_base_z"     default="0"/>
    <xacro:arg name="ur10e_base_roll"  default="0"/>
    <xacro:arg name="ur10e_base_pitch" default="0"/>
    <xacro:arg name="ur10e_base_yaw"   default="0"/>
    
    <xacro:arg name="summit_prefix" default="summitxls_"/>
    <xacro:arg name="ur10e_prefix"  default="ur10e_"/>
    <xacro:arg name="panda_prefix"  default="panda"/>
    
    <xacro:include filename="$(find iliad)/urdf/summit_macro.xacro"/>
    <xacro:include filename="$(find iliad)/urdf/ur_macro.xacro"/>
    <xacro:include filename="$(find iliad)/urdf/franka_robot.xacro"/>
    
    <!-- Robot Assembling   --> 
    <xacro:summit_xls_macro prefix="$(arg summit_prefix)" publish_bf="true" hq="true"/>

    <xacro:ur_robot_gazebo prefix="$(arg ur10e_prefix)"/>
    
    <joint name="summit_to_ur10e" type="fixed">
        <parent link="$(arg summit_prefix)base_chapa"/>
        <child  link="$(arg ur10e_prefix)base_link"/>
        <origin xyz="$(arg ur10e_base_x) $(arg ur10e_base_y) $(arg ur10e_base_z)" 
                rpy="$(arg ur10e_base_roll) $(arg ur10e_base_pitch) $(arg ur10e_base_yaw)"/>
    </joint>
     <!----> 
   <xacro:include filename="$(find iliad)/urdf/velvet.urdf.xacro"/>

    <xacro:model_velvet parent="ur10e_tool0" name="velvet">
        
        <origin xyz="0 0 0.14" rpy="0 0 0"/>           
    </xacro:model_velvet>
      
    
    <xacro:franka_robot arm_id="$(arg panda_prefix)" joint_limits="${xacro.load_yaml('$(find iliad)/robots/joint_limits.yaml')}"/>
    
    <joint name="$summit_to_panda" type="fixed">
        <parent link="$(arg summit_prefix)base_chapa"/>
        <child  link="$(arg panda_prefix)_link0"/>
        <origin xyz="$(arg panda_base_x) $(arg panda_base_y) $(arg panda_base_z)" 
                rpy="$(arg panda_base_roll) $(arg panda_base_pitch) $(arg panda_base_yaw)" />
    </joint>   
    
    
    <xacro:include filename="$(find softhands_description)/urdf/softhands.xacro"/>
    <!---->
    <xacro:softhands type="right" 
        version = "v1.0_simple"
        parent = "$(arg panda_prefix)_link8"
        position ="0.05 -0.05 0.04"
        orientation ="0 -1.57 2.355" 
        operation_mode = "0"
        translation="0.0">
    </xacro:softhands>
    
    <link name="flange">
        <visual>
            <geometry>
                <box size="0.10 0.06 0.08"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0.02 0 0"/>
            <material name="grey">
                <color rgba="0.5 0.5 0.5 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0.10 0.06 0.08"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0.02 0 0"/>
        </collision>
        <inertial>
            <mass value="0.300"/>
            <inertia ixx="0.00025" ixy="0.0" ixz="0.0" iyy="0.00041" iyz="0.0" izz="0.00034"/>
        </inertial>
    </link>
    
    <joint name="panda_link8_to_hand" type="fixed">
        <parent link="$(arg panda_prefix)_link8"/>
        <child link="flange"/>
        <origin rpy="0 0 -0.785" xyz="0 0 0.04"/>
    </joint>
    <!---->
    <link name="controller_unit">
        <visual>
            <geometry>
                <box size="0.2 0.4 0.3"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="grey">
                <color rgba="0.5 0.5 0.5 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0.2 0.4 0.30"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </collision>
        <inertial>
            <mass value="20"/>
            <inertia ixx="0.41666667" ixy="0.0" ixz="0.0" iyy="0.21666667" iyz="0.0" izz="0.33333333"/>
        </inertial>
    </link>
    
    <joint name="summit_to_controller_unit" type="fixed">
        <parent link="$(arg summit_prefix)base_chapa"/>
        <child link="controller_unit"/>
        <origin xyz="-0.25 0 0.15"/>
    </joint>
    
    <material name="steel">
        <color rgba="0 0 0 1.0"/> <!-- rviz green color -->
    </material>
    
    <link name="arms_base">
        <visual>
            <geometry>
                <mesh filename="package://iliad/meshes/arm_base.stl"/>
            </geometry>      
            <material name="steel"/>
        </visual>
    </link>
    
    <gazebo reference="arms_base"> 
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="controller_unit"> 
        <material>Gazebo/Grey</material>
    </gazebo>
    
    <joint name="summit_to_arms_base" type="fixed">
        <parent link="$(arg summit_prefix)base_chapa"/>
        <child link="arms_base"/>
        <origin xyz="0.135 0.410 0" rpy="0 0 -1.57079632679"/>
    </joint>
    
     <!--********************************************************************************************************************************************* -->

    <!-- ROS Plugins -->
    <gazebo>
        <plugin name="ros_control" filename="libgazebo_ros_control.so">
            <robotParam>robot_description</robotParam>
            <robotNamespace>/</robotNamespace>
            <controlPeriod>0.001</controlPeriod>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>
     
    <xacro:include filename="$(find summit_xl_description)/urdf/bases/summit_xl_base.gazebo.xacro" />
    <xacro:arg name="ros_planar_move_plugin" default="true"/>
	<xacro:arg name="ros_planar_move_plugin_force_based" default="true"/>
    <!-- <xacro:arg name="gpu" default="true"/> -->
    
    <xacro:if value="$(arg ros_planar_move_plugin)">
        <xacro:omni_steering prefix="$(arg summit_prefix)" publish_tf="true" force_based="$(arg ros_planar_move_plugin_force_based)"/>
    </xacro:if>
    
</robot>
